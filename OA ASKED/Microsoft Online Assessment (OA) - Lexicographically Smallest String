Given a string str, the task is to find the lexicographically smallest string that can be formed by removing at most one character from the given string.

Example 1:
Input: abczd
Output: abcd
Example 2:
Input: abcda
Output: abca
Explanation:
One can remove d to get abca which is the lexicographically smallest string possible.



#include <iostream>
#include<bits/stdc++.h>
#include<algorithm>
#define int long long
using namespace std;

void solve(){
   string s;cin>>s;
   int m=INT_MIN;char ch;
   for(int i=0;i<s.size();i++){
     int n=s[i]-'0';
     if(n>m){
       m=n;
       ch=s[i];
     }
   }
   string x;bool flag=0;
   for(int i=0;i<s.size();i++){
     if(s[i]!=ch||flag){
       x.push_back(s[i]);
     }else flag=1;
   }
   cout<<x<<endl;
	   return;
}
signed main(){
  // //
	// int t;cin>>t;
	// while(t--){
	    solve();
	//}
	return 0;
}
