Problem
Chef has an array AA of length NN. In one operation, Chef can choose any element A_iA 
i
​
  and split it into two positive integers XX and YY such that X+Y = A_iX+Y=A 
i
​
 .
Note that the length of array increases by 11 after every operation.

Determine the minimum numbers of operations required by Chef to make parity of all the elements same.

It is guaranteed that parity of all the elements can be made equal after applying the above operation zero or more times.


#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
	    vector<int>v(n);
	    int cnt=0;
	    for(int i=0;i<n;i++){
	        cin>>v[i];
	    }
	    int odcnt=0;
	    for(int i=0;i<n;i++){
	        if(v[i]%2!=0){
	          odcnt++;
	        }else{
	            cnt++;
	        }
	    }
	    if(cnt==n){
	        cout<<0<<endl;
	    }else{
	        cout<<cnt<<endl;
	    }
	}
	return 0;
}
