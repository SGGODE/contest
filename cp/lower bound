#include <iostream>
#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

int lower(vector<int>&v,int target){
    int hi=v.size()-1;
    int lo=0;
    int mid;
    while((hi-lo)>1){
        mid=(hi+lo)/2;
        if(v[mid]<target){
            lo=mid+1;
        }else{
           hi=mid; 
        }
    }
    if(v[lo]>=target){
        return lo;
    }if(v[hi]>=target){
        return hi;
    }
    return -1;
}

int main() {
	// your code goes here
    int n;
    cin>>n;
    vector<int>v(n);
    for(int i=0;i<n;i++) cin>>v[i];
    auto ptr=upper_bound(v.begin(),v.end(),10);
    cout<<*ptr<<endl;
    int it=lower(v,10);
    if(it==-1){
        cout<<"Not there"<<endl;
        return 0;
    }
    cout<<v[it]<<endl;
	return 0;
}
